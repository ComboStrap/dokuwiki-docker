# global options block
{
	servers {
		# Forward HTTP_X_FORWARDED_PROTO and other proxy headers
		# From private ranges proxy (Used in Kubernetes/docker case)
		trusted_proxies static {$DOKU_DOCKER_TRUSTED_PROXY}
		# https://caddyserver.com/docs/caddyfile/options#client-ip-headers
		# Cf-Connecting-Ip is the header of cloudflare
		client_ip_headers Cf-Connecting-Ip X-Forwarded-For X-Real-IP
	}

}

# public
# https://www.dokuwiki.org/install:caddy
:80 {
	# Root of the server (added to all relative path)
	# https://caddyserver.com/docs/caddyfile/directives/root
	root * /var/www/html

	# Log
	# https://caddyserver.com/docs/caddyfile/directives/log#examples
	log access-formatted {
		output file /var/log/caddy/access.log
		# https://github.com/caddyserver/transform-encoder?tab=readme-ov-file#apache-common-log-format-example
		# To see the data of a request, see https://caddyserver.com/docs/logging
		# We use `client_ip` in place of `remote_ip` to manage the proxy
		format transform `{request>client_ip} - {user_id} [{ts}] "{request>method} {request>uri} {request>proto}" {status} {size}` {
			time_format "02/Jan/2006:15:04:05 -0700"
		}
	}

	# Handle Rate Limit Error (429)
	handle_errors 429 {
	    header Content-Type text/html
        respond "
<html lang=\"en\">
    <head>
        <title>{err.status_code} {err.status_text}</title>
    </head>
    <body>
        <h1>{err.status_code} {err.status_text}</h1>
        <p>&nbsp;</p>
        <p>Your remote ip ({client_ip}) is above the rate limit of {$DOKU_DOCKER_PAGES_RATE_LIMIT_EVENTS:2} pages every {$DOKU_DOCKER_PAGES_RATE_LIMIT_WINDOW:1s}.</p>
        <p>&nbsp;</p>
        <p>Message generated by <a href=\"https://combostrap.com/dokuwiki-in-docker-gjwzuqtp\">Combostrap Docker</a></p>
    </body>
</html>
"
    }

	# https://caddyserver.com/docs/caddyfile/directives/log_skip
	log_skip /dokuwiki-docker/ping.php

	# Response encoding
	encode gzip zstd

	# serves static files
	file_server

	#############################
	# Handle dokuwiki request (forbidden and rewrite)
	#############################
	# The route block wrap the directives to ensure that they are executed in order
	# https://caddyserver.com/docs/caddyfile/directives/route
	route {
		# We secure the phpinfo script because
		# you can see the environment variables
		# that have secrets and other wild info
		@phpinfo {
			path /dokuwiki-docker/phpinfo.php
		}
		# 'basicauth' directive is deprecated, please use 'basic_auth' instead
		basic_auth @phpinfo {
			{$DOKU_DOCKER_ADMIN_NAME} {$DOKU_DOCKER_ADMIN_PASSWORD_BASIC_AUTH}
		}

		# Forbidden Path
		# data is an env to be able to use data as namespace DOKU_DOCKER_SAVE_DIR
		@forbidden {
			path /{$DOKU_DOCKER_SAVE_DIR}/* /conf/* /bin/* /inc/*
		}
		handle @forbidden {
			respond * 403
		}

		# Rewrite
		# https://www.dokuwiki.org/rewrite
		handle_path /_media/* {
			rewrite * /lib/exe/fetch.php?media={path}&{query}
		}
		handle_path /_detail/* {
			rewrite * /lib/exe/detail.php?media={path}&{query}
		}
		handle /_export/* {
			@export path_regexp export ^/_export/([^/]+)/(.*)
			rewrite @export /doku.php?do=export_{re.export.1}&{query}&id={re.export.2}
		}

		# Rewrite the home (/) to doku.php
		rewrite / /doku.php?{query}


		# Php-fpm Localhost only
		@localhost {
			remote_ip 127.0.0.1 ::1
		}
		handle @localhost {
			# php-fpm status available only locally
			# env are passed to php
			# see https://www.php.net/manual/en/reserved.variables.server.php
			# env are created by caddy, we set SCRIPT_NAME so that caddy does not add the root path
			# and we don't get a not found
			reverse_proxy /php-fpm/www/status 127.0.0.1:9000 {
				transport fastcgi {
					env SCRIPT_NAME /status
				}
			}
			reverse_proxy /php-fpm/doku/status 127.0.0.1:9001 {
				transport fastcgi {
					env SCRIPT_NAME /status
				}
			}
		}

		# php-fpm ping - available publicly
		# env are passed to php
		# see https://www.php.net/manual/en/reserved.variables.server.php
		# env are created by caddy, we set SCRIPT_NAME so that caddy does not add the root path
		reverse_proxy /php-fpm/www/ping 127.0.0.1:9000 {
			transport fastcgi {
				env SCRIPT_NAME {path}
			}
		}
		reverse_proxy /php-fpm/doku/ping 127.0.0.1:9001 {
			transport fastcgi {
				env SCRIPT_NAME {path}
			}
		}

		# If the request does not match any file at path,
		# rewrite to the doku.php entrypoint
		# Match php-fpm requests
		# match requests WITH NEITHER where
		# - a file that does not exists
		# - or a path that does not start with php-fpm
		# https://caddyserver.com/docs/caddyfile/matchers#not
		@default-rewrite {
			not file
			not path /doku.php /php-fpm/*
		}
		rewrite @default-rewrite /doku.php?id={path}&{query}

		###############
		# Handle Doku.php Processing
		# After all rewrite, please
		###############
		# Example request: http://localhost:8081/doku.php
		# The matcher start with a forward slash to match a request path
		@doku {
			path /doku.php
			# On login, there is a post with a redirect that exceed the limits
			method GET
		}
		handle @doku {
			rate_limit {
				zone dynamic_example {
				    # We use client_ip as key because it's a proxy aware ip
				    # If the request is not from a trusted proxy, the client IP is set to the remote IP address of the direct incoming connection
				    # In the rate limit example, they use remote_host (ie http.request.remote.host: the host (IP) part of the remote client's address that is not proxy aware)
				    # that is not proxy aware
					key {client_ip} #
					events {$DOKU_DOCKER_PAGES_RATE_LIMIT_EVENTS:2}
					window {$DOKU_DOCKER_RATE_LIMIT_WINDOW:1s}
				}
				log_key
			}
			# respond "Doku Handler {path}"
			php_fastcgi 127.0.0.1:9001
		}

		@doku-unlimited {
            # We put the CSS and the healthcheck in the doku pool (High priority)
		    path /lib/exe/css.php /dokuwiki-docker/ping.php
		    method GET
		}
		handle @doku-unlimited {
			# no rate limit
			#respond "Doku Unlimited Handler"
			php_fastcgi 127.0.0.1:9001
		}


		###############
		# Default (Handle fetch, ...)
		###############
		# https://caddyserver.com/docs/caddyfile/directives/php_fastcgi#expanded-form
		# handles PHP files using FastCGI
		# Example request: http://localhost:8081/lib/exe/fetch.php?media=image.jpg
		php_fastcgi 127.0.0.1:9000
	}
}
