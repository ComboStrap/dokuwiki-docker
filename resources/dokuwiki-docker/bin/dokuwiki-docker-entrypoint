#!/bin/bash

################
# Executing User Env
# The env is by default set for the Dockerfile user (ie root)
# When the image is run for the desktop/host user
# We recreate the same environment
################
# All environments
. /etc/profile


if [[ "${DOKU_DOCKER_STRICT}" != "false" ]]; then
  # flag
  # e - Exit if any error
  # u - Treat unset variables as an error when substituting
  # o pipefail - the return value of a pipeline is the status of the last command to exit with a non-zero status or zero if no command exited with a non-zero status
  # E - the ERR trap is inherited by shell functions
  set -Eeuo pipefail
  echo_info "Strict Mode"
else
  echo_info "Non-Strict Mode"
fi;


################
# SSH
################
KNOWN_HOST=$HOME/.ssh/known_hosts
if [ ! -f "$KNOWN_HOST" ]; then
  echo_info "Known Hosts file $KNOWN_HOST not found: updating"
  ssh_known_hosts_update
fi

#############################################
# Script
# * Dokuwiki: Install if not present
# * Conf: php-fpm and php
# Note: the current directory is /var/www/html
#############################################
DOKU_DOCKER_HOME=/opt/dokuwiki-docker


#############
# Supervisor
#############
# Create log dirs
# The log directory are not created and just stop supervisor
# https://github.com/Supervisor/supervisor/issues/120#issuecomment-209292870
SUPERVISOR_CONF_PATH=${SUPERVISOR_CONF_PATH:-/supervisord.conf}
LOGS=(
    "$CADDY_LOG"
    "$PHP_ERROR_LOG"
)
for LOG in "${LOGS[@]}"; do
    LOG_PARENT=$(dirname "$LOG")
    mkdir -p "$LOG_PARENT"
    touch "$LOG"
    chmod 666 "$LOG"
done

#############
# Php Conf
#############
# See dokuwiki-docker-env for the conf so that they are also passed in a `docker exec` command
# Note: Theses default configs are customized by configuration files into the $PHP_INI_DIR/conf.d/ directory.

DOKU_DOCKER_ENV=${DOKU_DOCKER_ENV:-prod}
if [[ ! -f "$PHP_INI_DIR/php.ini" ]] && [[ "${DOKU_DOCKER_ENV}" != "dev" ]]; then
  echo_info "Php Production Mode"
  mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
else
  echo_info "Php Development Mode"
  mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini"
fi


#############
# Dokuwiki Install
#############
# https://www.dokuwiki.org/install
export DOKUWIKI_VERSION=${DOKUWIKI_VERSION:-2024-02-06b}

echo_info "DokuWiki Availability check (Home: $DOKUWIKI_HOME)"
if [[ ! -f $DOKUWIKI_HOME/doku.php ]]; then

    # Install is done by downloading
    # Download DokuWiki from the official website or from GitHub

    echo_info "Dokuwiki not found, installing version ${DOKUWIKI_VERSION} ..."
    DOKUWIKI_ARCHIVE_PATH="/opt/dokuwiki-${DOKUWIKI_VERSION}.tgz"

    # Get the archive
    # Last Dokuwiki version is stored in /opt
    DOKUWIKI_ARCHIVE_DOWNLOADED=false
    if [[ ! -f $DOKUWIKI_ARCHIVE_PATH ]]; then
      echo_info "  * Download version ${DOKUWIKI_VERSION} ..."
      curl --fail -L "https://download.dokuwiki.org/src/dokuwiki/dokuwiki-${DOKUWIKI_VERSION}.tgz" -o "$DOKUWIKI_ARCHIVE_PATH" ||
        curl --fail -L "https://github.com/dokuwiki/dokuwiki/releases/download/release-${DOKUWIKI_VERSION}/dokuwiki-${DOKUWIKI_VERSION}.tgz" -o "$DOKUWIKI_ARCHIVE_PATH"
        DOKUWIKI_ARCHIVE_DOWNLOADED=true
    else
      echo_info "  * Version ${DOKUWIKI_VERSION} found in the image"
    fi

    # Unzip the archive
    # --no-same-owner option so that the files have root as owner
    echo_info "  * Unzipping version ${DOKUWIKI_VERSION} ..."
    tar --no-same-owner -xzf "$DOKUWIKI_ARCHIVE_PATH" --strip-components=1

    # Clean Up
    if [ $DOKUWIKI_ARCHIVE_DOWNLOADED == "true" ]; then
        echo_info "  * Removing the download version ${DOKUWIKI_VERSION} ..."
        rm "$DOKUWIKI_ARCHIVE_PATH"
    fi;

    echo_info "Backup the installed Inter wiki images"
    # Move the default Inter wiki images to not get them in Git
    INTER_WIKI_BACKUP_DIR=lib/images/interwiki-dokuwiki-docker-backup
    mkdir -p $INTER_WIKI_BACKUP_DIR
    mv lib/images/interwiki/* $INTER_WIKI_BACKUP_DIR

else

  echo_info "Dokuwiki found, no installation"

fi

#############################################
# Dokuwiki Save Dir
#############################################
# If a user want to have `data` as namespace. ie https://dokuwiki.com/data/mypage
# it needs to set the `savedir` (https://www.dokuwiki.org/config:savedir) to another value than data
# otherwise it's refused by the web server (ie Caddyfile)
# as the whole dokuwiki data directory is forbidden
# We make it idempotent (not coupled to the installation)
# because the installation may break
# The path to the dokuwiki data
export DOKU_DOCKER_SAVE_DIR=${DOKU_DOCKER_SAVE_DIR:-data}
export DOKUWIKI_SAVE_DIR="$DOKUWIKI_HOME/${DOKU_DOCKER_SAVE_DIR:-data}"
echo_info "Dokuwiki Data directory: ($DOKUWIKI_SAVE_DIR)"
if [[ "$DOKU_DOCKER_SAVE_DIR" != "data" ]] && [[ ! -d "$DOKUWIKI_SAVE_DIR" ]] && [[ -d "$DOKUWIKI_HOME/data" ]]; then
  echo_info "Moving the dokuwiki data directory because (DOKU_DOCKER_DATA_PATH) was set to ($DOKU_DOCKER_SAVE_DIR)"
  mv "$DOKUWIKI_HOME"/data "$DOKUWIKI_SAVE_DIR"
fi

#############################################
# Dokuwiki Patch
#############################################
DOKUWIKI_PATCH_DIR="$DOKU_DOCKER_HOME/meta/dokuwiki-patches/${DOKUWIKI_VERSION}"
if [[ -d "$DOKUWIKI_PATCH_DIR" ]]; then
  echo_info "Dokuwiki Patch: Copying Patch for version ${DOKUWIKI_VERSION}"
  cp -r -f "$DOKUWIKI_PATCH_DIR"/* "$DOKUWIKI_HOME"
fi

#############################################
# Dokuwiki Docker (health script and configuration)
#############################################
# We copy them each time, we don't handle the version anymore
# Old code:
# DOKU_DOCKER_VERSION=1
# DOKU_DOCKER_VERSION_FILE=dokuwiki-docker-version
# if [[ ! -f $DOKU_DOCKER_VERSION_FILE ]] || [ "$(cat $DOKU_DOCKER_VERSION_FILE)" -ne $DOKU_DOCKER_VERSION ]; then
echo_info Dokuwiki docker
echo_info "  * Copying Dokuwiki docker preload.php"
cp -r -f "$DOKU_DOCKER_HOME"/meta/dokuwiki-conf/preload.php "$DOKUWIKI_HOME/inc/preload.php"
echo_info "  * Copying Dokuwiki Docker Status file"
mkdir -p "$DOKUWIKI_HOME/dokuwiki-docker"
cp -r -f "$DOKU_DOCKER_HOME"/meta/status/* "$DOKUWIKI_HOME/dokuwiki-docker"


################
# Git WebSite
###############
DOKU_DOCKER_GIT_SITE=${DOKU_DOCKER_GIT_SITE:-}
DOKUWIKI_PAGES_DIR=$DOKU_DOCKER_SAVE_DIR/pages
ROOT_PAGES_COUNT=$(find "$DOKUWIKI_PAGES_DIR" -maxdepth 1 -type f | wc -l)
if [[ ! -d "$DOKUWIKI_HOME/.git" ]] && [ "$ROOT_PAGES_COUNT" == "0" ]; then
  echo_info "No Website installed detected"
  if [ "$DOKU_DOCKER_GIT_SITE" != "" ]; then
    echo_info "Installing WebSite from Git Repo: $DOKU_DOCKER_GIT_SITE"
    comboctl install_site "$DOKU_DOCKER_GIT_SITE"
  else
    ## Install the default website if not disabled
    DOKU_DOCKER_STARTER_SITE=${DOKU_DOCKER_STARTER_SITE:-true}
    if [[ "${DOKU_DOCKER_STARTER_SITE}" != "false" ]]; then
      STARTER_GIT_WEB_SITE=https://github.com/ComboStrap/site-default.git
      echo_info "Installing Starter WebSite from Git Repo: $STARTER_GIT_WEB_SITE"
        comboctl install_site "$STARTER_GIT_WEB_SITE"
        # Remove git
        rm -rf .git
      fi
  fi;
else
  echo_info "No combo website installation because:"
  if [ "$ROOT_PAGES_COUNT" != "0" ]; then
    echo_info "  * Website detected with $ROOT_PAGES_COUNT pages at the root"
  else
    echo_info "  * Git was detected"
  fi;
fi


################
# Install Plugins
# We install plugin not with a Site installation
# because if the dev develops, it may change just the plugins file
################
echo_info ""
echo_info "Plugins installation:"
echo_info Path is "$PATH"
comboctl install_plugins

################
# Install (users.auth.php, local.conf and acl.auth.php)
################
# The https://www.dokuwiki.org/installer but somewhat scripted
dokuwiki-installer



#####################
# Php Info Security
# The php info script should be available only from the admin user
# because it can show environment variables
#####################
export DOKU_DOCKER_ADMIN_NAME=${DOKU_DOCKER_ADMIN_NAME:-admin}
export DOKU_DOCKER_ADMIN_PASSWORD=${DOKU_DOCKER_ADMIN_PASSWORD:-}
if [ "$DOKU_DOCKER_ADMIN_PASSWORD" == "" ]; then
  echo_info "No admin password found. Deleting phpinfo.php"
  # No password set, no phpinfo should be available
  rm dokuwiki-docker/phpinfo.php
  # Random value as the
  DOKU_DOCKER_ADMIN_PASSWORD=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 20)
fi;
export DOKU_DOCKER_ADMIN_PASSWORD_BASIC_AUTH;
DOKU_DOCKER_ADMIN_PASSWORD_BASIC_AUTH=$(caddy hash-password --plaintext "$DOKU_DOCKER_ADMIN_PASSWORD")
# We can't unset the clear password as the password is also used
# in clear in the supervisor conf file
# unset DOKU_DOCKER_ADMIN_PASSWORD

################
# Update search index
################
DOKU_DOCKER_SEARCH_INDEX=${DOKU_DOCKER_SEARCH_INDEX:-on}
if [[ "$DOKU_DOCKER_SEARCH_INDEX" != "off" ]]; then

  echo_info "Updating search index"
  comboctl index

else

  echo_info "Automatic Update of search index disabled"

fi

###############
# Git Config
################
echo_info "Git Config"
if git rev-parse --is-inside-work-tree &>/dev/null; then
  # Every git command returns an error if a get returns nothing
  # We therefore add the command as condition
  if ! git config --global --get user.email &>/dev/null; then
    DOKU_DOCKER_ADMIN_EMAIL=${DOKU_DOCKER_ADMIN_EMAIL:-}
    if [ "$DOKU_DOCKER_ADMIN_EMAIL" != "" ] ; then
      echo_info "  * Git user email configuration set to: $DOKU_DOCKER_ADMIN_EMAIL"
      git config --global user.email "$DOKU_DOCKER_ADMIN_EMAIL"
    else
      echo_info "  * Git user email configuration not set. The env DOKU_DOCKER_ADMIN_EMAIL was missing"
    fi
  else
    GIT_USER_EMAIL=$(git config --global --get user.email)
    echo_info "  * Git user email: $GIT_USER_EMAIL"
  fi

  # Every git command returns an error if a get returns nothing
  # We therefore add the command as condition
  if ! git config --global --get user.name &>/dev/null; then
    DOKU_DOCKER_ADMIN_NAME=${DOKU_DOCKER_ADMIN_NAME:-}
    if [ "$DOKU_DOCKER_ADMIN_NAME" != "" ] ; then
      GIT_USER_NAME="$DOKU_DOCKER_ADMIN_NAME (Combostrap DokuWiki Docker)"
      git config --global user.name "$GIT_USER_NAME"
      echo_info "  * Git user name configuration set to: $GIT_USER_NAME"
    else
      echo_info "  * Git user name configuration not set. The env DOKU_DOCKER_ADMIN_NAME was missing"
    fi
  else
    GIT_USER_NAME=$(git config --global --get user.name)
    echo_info "  * Git user name: $GIT_USER_NAME"
  fi
else
  echo_info "  * Not ComboStrap Git WebSite detected"
fi



# Start
################
# https://github.com/docker-library/php/blob/master/8.3/bookworm/fpm/docker-php-entrypoint
# Exec permits to respond to ctrl+c key and terminate the running process.
exec docker-php-entrypoint "$@"
