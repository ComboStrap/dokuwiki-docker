#!/bin/bash

if [[ "${DOKU_DOCKER_ENV}" != "dev" ]]; then
  # flag
  # e - Exit if any error
  # u - Treat unset variables as an error when substituting
  # o pipefail - the return value of a pipeline is the status of the last command to exit with a non-zero status or zero if no command exited with a non-zero status
  # E - the ERR trap is inherited by shell functions
  set -Eeuo pipefail
fi;

# Functions
SCRIPT_DIR="$(dirname "$0")"
source "$SCRIPT_DIR/dd"

#############################################
# Script
# * Dokuwiki: Install if not present
# * Conf: php-fpm and php
# Note: the current directory is /var/www/html
#############################################
DOKU_DOCKER_HOME=/opt/dokuwiki-docker

#############################################
# Env
#############################################
# To bring the environment
. /etc/profile.d/dokuwiki-docker-env.sh

#############
# Supervisor
#############
# Create log dirs
# The log directory are not created and just stop supervisor
# https://github.com/Supervisor/supervisor/issues/120#issuecomment-209292870
SUPERVISOR_CONF_PATH=${SUPERVISOR_CONF_PATH:-/supervisord.conf}
LOG_HOME=${LOG_HOME:-/var/log}
export PHP_ERROR_LOG=${LOG_HOME}/php/error.log
export CADDY_LOG=${LOG_HOME}/caddy/caddy.log
LOGS=(
    "$CADDY_LOG"
    "$PHP_ERROR_LOG"
)
for LOG in "${LOGS[@]}"; do
    LOG_PARENT=$(dirname "$LOG")
    mkdir -p "$LOG_PARENT"
    touch "$LOG"
    chmod 666 "$LOG"
done

#############
# Php Conf
#############
# See dokuwiki-docker-env for the conf so that they are also passed in a `docker exec` command
# Note: Theses default configs are customized by configuration files into the $PHP_INI_DIR/conf.d/ directory.

DOKU_DOCKER_ENV=${DOKU_DOCKER_ENV:-prod}
if [[ ! -f "$PHP_INI_DIR/php.ini" ]] && [[ "${DOKU_DOCKER_ENV}" != "dev" ]]; then
  dd_echo "Production Mode"
  mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini"
else
  dd_echo "Development Mode"
  mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini"
fi


#############
# Php Fpm Conf
#############
export PHP_FPM_PM_START_SERVERS=${PHP_FPM_PM_START_SERVERS:-2}

#############
# Dokuwiki Install
#############
# https://www.dokuwiki.org/install
export DOKUWIKI_VERSION=${DOKUWIKI_VERSION:-2024-02-06b}
# The path to the dokuwiki data
export DOKU_DOCKER_SAVE_DIR=${DOKU_DOCKER_SAVE_DIR:-data}
if [[ ! -f doku.php ]]; then

    # Install is done by downloading
    # Download DokuWiki from the official website or from GitHub

    dd_echo "Dokuwiki not found, installing version ${DOKUWIKI_VERSION} ..."
    # --no-same-owner so that the files have root as owner
    curl --fail -L "https://download.dokuwiki.org/src/dokuwiki/dokuwiki-${DOKUWIKI_VERSION}.tgz" -o dokuwiki.tgz || curl --fail -L "https://github.com/dokuwiki/dokuwiki/releases/download/release-${DOKUWIKI_VERSION}/dokuwiki-${DOKUWIKI_VERSION}.tgz" -o dokuwiki.tgz \
        && tar --no-same-owner -xzf dokuwiki.tgz --strip-components=1 \
        && rm dokuwiki.tgz

    # If a user want to have `data` as namespace. ie https://dokuwiki.com/data/mypage
    # it needs to set the `savedir` (https://www.dokuwiki.org/config:savedir) to another value than data
    # otherwise it's refused by the web server (ie Caddyfile)
    # as the whole dokuwiki data directory is forbidden
    if [[ "$DOKU_DOCKER_SAVE_DIR" != "data" ]]; then
      dd_echo "Moving the dokuwiki data directory because (DOKU_DOCKER_DATA_PATH) was set to ($DOKU_DOCKER_SAVE_DIR)"
      mv data/* "$DOKU_DOCKER_SAVE_DIR/"
      # rf because media and pages directory will not move
      rm -rf data
    fi

    dd_echo "Backup the installed Inter wiki images"
    # Move the default Inter wiki images to not get them in Git
    INTER_WIKI_BACKUP_DIR=lib/images/interwiki-dokuwiki-docker-backup
    mkdir -p $INTER_WIKI_BACKUP_DIR
    mv lib/images/interwiki/* $INTER_WIKI_BACKUP_DIR

    ## Install the default website if a web site was not given
    if [ -z "$DOKU_DOCKER_GIT_SITE" ] && [[ "${DOKU_DOCKER_DEFAULT_SITE}" != "false" ]] && [[ ! -d './.git' ]]; then
      dd_install_site https://github.com/ComboStrap/site-default.git
      # Remove git
      rm -rf .git
    fi

fi

#############################################
# Dokuwiki Patch
#############################################
DOKUWIKI_PATCH_DIR="$DOKU_DOCKER_HOME/meta/dokuwiki-patches/${DOKUWIKI_VERSION}"
if [[ -d "$DOKUWIKI_PATCH_DIR" ]]; then
  dd_echo "Copying Dokuwiki Patch for version ${DOKUWIKI_VERSION}"
  cp -r -f "$DOKUWIKI_PATCH_DIR"/* .
fi

#############################################
# Dokuwiki Docker (health script and configuration)
#############################################
# We copy them each time, we don't handle the version anymore
# Old code:
# DOKU_DOCKER_VERSION=1
# DOKU_DOCKER_VERSION_FILE=dokuwiki-docker-version
# if [[ ! -f $DOKU_DOCKER_VERSION_FILE ]] || [ "$(cat $DOKU_DOCKER_VERSION_FILE)" -ne $DOKU_DOCKER_VERSION ]; then
dd_echo Dokuwiki docker
dd_echo "  * Copying Dokuwiki docker extra files"
cp -r -f "$DOKU_DOCKER_HOME"/meta/dokuwiki-docker .
dd_echo "  * Copying Dokuwiki hook files"
cp -r -f "$DOKU_DOCKER_HOME"/meta/dokuwiki-docker/dokuwiki/* .


################
# Git WebSite
###############
DOKU_DOCKER_GIT_SITE=${DOKU_DOCKER_GIT_SITE:-}
if [ "$DOKU_DOCKER_GIT_SITE" != "" ] && [[ ! -d './.git' ]]; then
  dd_echo "Installing WebSite from Git Repo: $DOKU_DOCKER_GIT_SITE"
  dd_install_site "$DOKU_DOCKER_GIT_SITE"
fi

################
# Install Plugins
################
dd_install_plugins

################
# Install (users.auth.php, local.conf and acl.auth.php)
################
# The https://www.dokuwiki.org/installer but somewhat scripted
dd_echo "##############"
# The policy of the [installer](https://www.dokuwiki.org/installer)
DOKU_DOCKER_ACL_POLICY=${DOKU_DOCKER_ACL_POLICY:-readonly}
dd_echo "Installation configuration with the ACL policy '$DOKU_DOCKER_ACL_POLICY'"

## Local.php should be first
# as it's used by the script when creating the user file
if [[ ! -f conf/local.php ]]; then
  dd_echo "conf/local.php: Dokuwiki Local conf not present copying a default one"
  cp $DOKU_DOCKER_HOME/meta/install/local.php ./conf/local.php
else
  dd_echo "  * conf/local.php: Dokuwiki Local conf already present"
fi

case "$DOKU_DOCKER_ACL_POLICY" in
    # ReadOnly Wiki (read for everyone, write and upload for no one)
    "readonly")

        if [[ ! -f conf/acl.auth.php ]]; then
          dd_echo "  * conf/acl.auth.php: Read only ACL configured"
          cp $DOKU_DOCKER_HOME/meta/install/readonly/acl.auth.php ./conf/acl.auth.php
        else
          dd_echo "  * conf/acl.auth.php: Nothing Done - Dokuwiki Acl already present"
        fi

        if [[ ! -f conf/users.auth.php ]]; then
          cp -f $DOKU_DOCKER_HOME/meta/install/readonly/users.auth.php ./conf/users.auth.php
          dd_echo "  * conf/users.auth.php: Empty User dictionary copied"
        else
          dd_echo "  * conf/users.auth.php: Nothing Done - Already present"
        fi

      ;;
    # Public Wiki (read for everyone, write and upload for registered users)
    "public" | "pubupload" | "public-upload")

      if [[ ! -f conf/acl.auth.php ]]; then
          dd_echo "  * conf/acl.auth.php: Public ACL configured"
          cp $DOKU_DOCKER_HOME/meta/install/public/acl.auth.php ./conf/acl.auth.php
        else
          dd_echo "  * conf/acl.auth.php: Nothing done - already present"
      fi

      if [[ ! -f conf/users.auth.php ]]; then
          if [ -z "$DOKU_DOCKER_ADMIN_NAME" ]; then
            dd_echo "For an acl policy ($DOKU_DOCKER_ACL_POLICY), the admin name is mandatory. Set it with the environment variable (DOKU_DOCKER_ADMIN_NAME) "
            exit 1
          fi;
          if [ -z "$DOKU_DOCKER_ADMIN_PASSWORD" ]; then
            dd_echo "For an acl policy ($DOKU_DOCKER_ACL_POLICY), the admin password is mandatory. Set it with the environment variable ($DOKU_DOCKER_ADMIN_PASSWORD) "
            exit 1
          fi
          DOKU_DOCKER_ADMIN_EMAIL=${DOKU_DOCKER_ADMIN_EMAIL:-admin@localhost}
          dd_echo "  * conf/users.auth.php: Creating the user ($DOKU_DOCKER_ADMIN_NAME)"
          php $DOKU_DOCKER_HOME/bin/users.auth.init.php "$DOKU_DOCKER_ADMIN_NAME" "$DOKU_DOCKER_ADMIN_PASSWORD" "$DOKU_DOCKER_ADMIN_EMAIL"
        else
          dd_echo "  * conf/users.auth.php: Nothing done - already present"
      fi
    ;;
    *)
      dd_echo "The mode (ie DOKU_DOCKER_ACL_POLICY) should have the value 'readonly' or 'public' not ($DOKU_DOCKER_ACL_POLICY)"
      exit 1
    ;;
esac


################
# Executing User
################
dd_echo "Executing User: $(whoami) UID: $(id -u) GID: $(id -g)\n"

#####################
# Php Info Security
# The php info script should be available only from the admin user
# because it can show environment variables
#####################
DOKU_DOCKER_ADMIN_NAME=${DOKU_DOCKER_ADMIN_NAME:-admin}
if [ -z "$DOKU_DOCKER_ADMIN_PASSWORD" ]; then
  dd_echo "No admin password found. Deleting phpinfo.php"
  # No password set, no phpinfo should be available
  rm dokuwiki-docker/phpinfo.php
  # Random value as the
  DOKU_DOCKER_ADMIN_PASSWORD=$(head /dev/urandom | tr -dc A-Za-z0-9 | head -c 20)
fi;
export DOKU_DOCKER_ADMIN_PASSWORD_BASIC_AUTH;
DOKU_DOCKER_ADMIN_PASSWORD_BASIC_AUTH=$(caddy hash-password --plaintext "$DOKU_DOCKER_ADMIN_PASSWORD")
# We can't unset the clear password as the password is also used
# in clear in the supervisor conf file
# unset DOKU_DOCKER_ADMIN_PASSWORD

################
# Update search index
################
DOKU_DOCKER_SEARCH_INDEX=${DOKU_DOCKER_SEARCH_INDEX:-on}
if [[ "$DOKU_DOCKER_SEARCH_INDEX" != "off" ]]; then
  dd_echo "Updating search index"
  php bin/indexer.php -q
else
  dd_echo "Automatic Update of search index disabled"
fi

################
# Start
################
# https://github.com/docker-library/php/blob/master/8.3/bookworm/fpm/docker-php-entrypoint
# Exec permits to respond to ctrl+c key and terminate the running process.
exec docker-php-entrypoint "$@"
