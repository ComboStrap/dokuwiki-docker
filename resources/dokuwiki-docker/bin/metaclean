#!/bin/bash
# This script will clean the meta directory

# Directories to compare
pagesDir="$1"
if [ -z "$pagesDir" ]; then
  pagesDir="./pages"
  echo "The pages dir was set to the default value: $pagesDir"
fi

if [ ! -d "$pagesDir" ]; then
    echo "Error: The pages dir '$pagesDir' is not a directory or does not exist."
    exit 1
fi

metaDir="$2"
if [ -z "$metaDir" ]; then
	metaDir="./meta"
    echo "The meta dir was set to the default value: $metaDir"
fi

if [ ! -d "$metaDir" ]; then
    echo "Error: The meta '$metaDir' is not a directory or does not exist."
    exit 1
fi

# Iterate over each directory in meta
find "$metaDir" -type d | while read -r dir; do
    # Get the relative path from metaDir
    relative_path="${dir#$metaDir}"

    # Check if the corresponding directory exists in pagesDir
    if [ ! -d "$pagesDir$relative_path" ]; then
        # If it doesn't exist, delete the directory in metaDir
        echo "Deleting dir: $dir"
        rm -rf "$dir"
    fi
done

# Iterate over each file in meta
# A corresponding page file should exist in pages
# Files extension in meta may be `meta`, `indexed` or `changes`
find "$metaDir" -type f | while read -r metaFile; do

	# Get the relative path from metaDir
  relative_path="${metaFile#$metaDir}"

  # Get away of the ext
	relative_path_without_ext="${relative_path%.*}"

	# Add txt
	relative_page_path="${relative_path_without_ext}.txt"

  # Check if the corresponding page exists in pages
  if [ ! -f "$pagesDir$relative_page_path" ]; then
      # If it doesn't exist, delete the file in meta
      echo "Deleting file: $metaFile"
      rm -f "$metaFile"
  fi

done
